{"version":3,"sources":["scripts/first-person-movement.js","scripts/ui.js"],"names":[],"mappings":"AACA,IAAI,oBAAsB,GAAG,aAAa,uBAE1C,oBAAoB,WAAW,IAAI,SAAU,CACzC,KAAM,SACN,YAAa,+DAGjB,oBAAoB,WAAW,IAAI,QAAS,CACxC,KAAM,SACN,QAAS,KACT,YAAa,yCAGjB,oBAAoB,WAAW,IAAI,YAAa,CAC5C,KAAM,SACN,QAAS,IACT,YAAa,uCAIjB,oBAAoB,UAAU,WAAa,WACvC,KAAK,MAAQ,IAAI,GAAG,KACpB,KAAK,OAAS,IAAI,GAAG,KAErB,IAAI,EAAM,KAAK,IAGf,EAAI,MAAM,GAAG,YAAa,KAAK,aAAc,MAG7C,EAAI,MAAM,GAAG,aAAa,WACtB,EAAI,MAAM,sBACX,MAGE,KAAK,OAAO,WACb,QAAQ,MAAM,sEAGb,KAAK,OAAO,WAAa,KAAK,OAAO,UAAU,OAAS,GAAG,kBAC5D,QAAQ,MAAM,+EAKtB,oBAAoB,UAAU,OAAS,SAAS,GAEvC,KAAK,QACN,KAAK,gBAGT,IAAI,EAAQ,KAAK,MACb,EAAM,KAAK,IAGX,EAAU,KAAK,OAAO,QACtB,EAAQ,KAAK,OAAO,MAIpB,EAAI,EACJ,EAAI,GAIJ,EAAI,SAAS,UAAU,GAAG,QAAU,EAAI,SAAS,UAAU,GAAG,UAC9D,GAAK,EAAM,EACX,GAAK,EAAM,GAGX,EAAI,SAAS,UAAU,GAAG,SAC1B,GAAK,EAAM,EACX,GAAK,EAAM,GAGX,EAAI,SAAS,UAAU,GAAG,SAC1B,GAAK,EAAQ,EACb,GAAK,EAAQ,GAGb,EAAI,SAAS,UAAU,GAAG,SAC1B,GAAK,EAAQ,EACb,GAAK,EAAQ,GAIP,IAAN,GAAiB,IAAN,IACX,EAAM,IAAI,EAAG,EAAG,GAAG,YAAY,MAAM,KAAK,OAC1C,KAAK,OAAO,UAAU,WAAW,IAIrC,KAAK,OAAO,oBAAoB,KAAK,OAAO,EAAG,KAAK,OAAO,EAAG,IAGlE,oBAAoB,UAAU,aAAe,SAAU,IAG/C,GAAG,MAAM,mBAAqB,EAAE,QAAQ,MACxC,KAAK,OAAO,GAAK,KAAK,UAAY,EAAE,GACpC,KAAK,OAAO,GAAK,KAAK,UAAY,EAAE,KAI5C,oBAAoB,UAAU,cAAgB,WAE1C,KAAK,OAAS,IAAI,GAAG,OACrB,KAAK,OAAO,QAAQ,uBACpB,KAAK,OAAO,aAAa,UACzB,KAAK,OAAO,SAAS,KAAK,QAC1B,KAAK,OAAO,eAAe,EAAG,GAAK,IC9GvC,IAAI,GAAK,GAAG,aAAa,MAEzB,GAAG,WAAW,IAAI,OAAQ,CACtB,KAAM,QACN,UAAW,SAGf,GAAG,WAAW,IAAI,MAAO,CACrB,KAAM,QACN,UAAW,QAIf,GAAG,UAAU,WAAa,WACtB,IAAI,EAAM,SAAS,cAAc,OACjC,EAAI,GAAK,KACT,EAAI,UAAY,KAAK,KAAK,SAC1B,SAAS,KAAK,YAAY,GAE1B,MAAQ,GAAG,YAAY,KAAK,IAAI,UAChC,SAAS,KAAK,YAAY","sourcesContent":["// first-person-movement.js\nvar FirstPersonMovement = pc.createScript('firstPersonMovement');\n\nFirstPersonMovement.attributes.add('camera', {\n    type: 'entity',\n    description: 'Optional, assign a camera entity, otherwise one is created'\n});\n\nFirstPersonMovement.attributes.add('power', {\n    type: 'number',\n    default: 2500,\n    description: 'Adjusts the speed of player movement'\n});\n\nFirstPersonMovement.attributes.add('lookSpeed', {\n    type: 'number',\n    default: 0.25,\n    description: 'Adjusts the sensitivity of looking'\n});\n\n// initialize code called once per entity\nFirstPersonMovement.prototype.initialize = function() {\n    this.force = new pc.Vec3();\n    this.eulers = new pc.Vec3();\n    \n    var app = this.app;\n    \n    // Listen for mouse move events\n    app.mouse.on(\"mousemove\", this._onMouseMove, this);\n\n    // when the mouse is clicked hide the cursor\n    app.mouse.on(\"mousedown\", function () {\n        app.mouse.enablePointerLock();\n    }, this);            \n\n    // Check for required components\n    if (!this.entity.collision) {\n        console.error(\"First Person Movement script needs to have a 'collision' component\");\n    }\n\n    if (!this.entity.rigidbody || this.entity.rigidbody.type !== pc.BODYTYPE_DYNAMIC) {\n        console.error(\"First Person Movement script needs to have a DYNAMIC 'rigidbody' component\");\n    }\n};\n\n// update code called every frame\nFirstPersonMovement.prototype.update = function(dt) {\n    // If a camera isn't assigned from the Editor, create one\n    if (!this.camera) {\n        this._createCamera();\n    }\n    \n    var force = this.force;\n    var app = this.app;\n\n    // Get camera directions to determine movement directions\n    var forward = this.camera.forward;\n    var right = this.camera.right;\n       \n\n    // movement\n    var x = 0;\n    var z = 0;\n\n    // Use W-A-S-D keys to move player\n    // Check for key presses\n    if (app.keyboard.isPressed(pc.KEY_A) || app.keyboard.isPressed(pc.KEY_Q)) {\n        x -= right.x;\n        z -= right.z;\n    }\n\n    if (app.keyboard.isPressed(pc.KEY_D)) {\n        x += right.x;\n        z += right.z;\n    }\n\n    if (app.keyboard.isPressed(pc.KEY_W)) {\n        x += forward.x;\n        z += forward.z;\n    }\n\n    if (app.keyboard.isPressed(pc.KEY_S)) {\n        x -= forward.x;\n        z -= forward.z;\n    }\n\n    // use direction from keypresses to apply a force to the character\n    if (x !== 0 || z !== 0) {\n        force.set(x, 0, z).normalize().scale(this.power);\n        this.entity.rigidbody.applyForce(force);\n    }\n\n    // update camera angle from mouse events\n    this.camera.setLocalEulerAngles(this.eulers.y, this.eulers.x, 0);\n};\n\nFirstPersonMovement.prototype._onMouseMove = function (e) {\n    // If pointer is disabled\n    // If the left mouse button is down update the camera from mouse movement\n    if (pc.Mouse.isPointerLocked() || e.buttons[0]) {\n        this.eulers.x -= this.lookSpeed * e.dx;\n        this.eulers.y -= this.lookSpeed * e.dy;\n    }            \n};\n\nFirstPersonMovement.prototype._createCamera = function () {\n    // If user hasn't assigned a camera, create a new one\n    this.camera = new pc.Entity();\n    this.camera.setName(\"First Person Camera\");\n    this.camera.addComponent(\"camera\");\n    this.entity.addChild(this.camera);\n    this.camera.translateLocal(0, 0.5, 0);\n};\n\n","// ui.js\nvar Ui = pc.createScript('ui');\n\nUi.attributes.add('html', {\n    type: 'asset',\n    assetType: 'html'\n});\n\nUi.attributes.add('css', {\n    type: 'asset',\n    assetType: 'css'\n});\n\n// initialize code called once per entity\nUi.prototype.initialize = function() {\n    var div = document.createElement(\"div\");\n    div.id = \"ui\";\n    div.innerHTML = this.html.resource;\n    document.body.appendChild(div);\n\n    style = pc.createStyle(this.css.resource);\n    document.head.appendChild(style); \n};\n\n"]}